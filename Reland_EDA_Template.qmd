---
title: "Relandscaping Analysis Template"
format: html
editor: visual
---

## Relandscaping Exploratory Analysis:

Winter 2024 - MCRS Advanced Quantitative Methods Class Project

Team #:

Team Members:

#### Load Packages

```{r}
library(tidyverse)
library(ggplot2)
library(vegan)
```

#### Import your Primary file from your saved .Rdata

```{r}
load("Quad_Combined_Clean.Rdata")
```

### Analysis

Before you begin, write your plan for analyzing this data. Add a header for each step you anticipate, then commit and push the document to Git. This may include steps such as:

-   calculating summarized variables (i.e., rates or change between time points, averages of replicated observations)

-   making figures to illuminate comparisons or relationships

-   testing assumptions and/or running models to test for significant comparisons or relationships

Never save over your Primary file. While you are playing around, only make edits under your own workspace header and on your own branch. By doing this, when you commit and push your changes to your shared repository, you avoid merge conflicts.

Once you have something good, show it to your teammates and you can agree to add it (by pasting into the chunk below) to your shared Team Analysis. The team member who updates the Team Analysis should then merge their branch with the master, and all teammates should do a fresh "pull", which will merge the new changes to your current working version. (if this is confusing, ask us for help)

#### Team Analysis

```{r}

```

#### Team Member #1 Workspace (rename)

```{r}

```

#### Team Member #2 Workspace (rename)

```{r}

```

#### Team Member #3 Workspace (rename)

```{r}

```

#### Luke's Workspace

```{r}
Quad_Wide <- Quad_Combined_Clean |>
  select(2,3,4,5,7)


Quad_Richness <- Quad_Wide |> 
  group_by(Treatment) |> 
  count() |>
  rename(Count = n)

Quad_Richness_Bar <- ggplot(Quad_Richness) +  
  aes(x = Treatment, y = Count, fill = Treatment) + 
  scale_fill_manual(values = c("darkblue", "limegreen")) +
  geom_col() +
  labs(x = "Treatment",
       y = "Species Richness",
       title = "Species Richness of Native vs. Non-Native Plots")

Quad_Richness_Bar









```

```{r}
Quad_Wide_1 <- Quad_Wide |>
  pivot_wider(names_from = Species_Code, values_from = Count, values_fill = 0)
Quad_Wide_1

Shan <- diversity(Quad_Wide_1[,5:ncol(Quad_Wide_1)], index = "shannon")
Quad_Wide_1_Summary <- Quad_Wide_1[1:3] |>
bind_cols(Shan)
Quad_Wide_1_Summary

Quad_Shan <- aggregate(x = Quad_Wide_1_Summary$...4, by = list(Quad_Wide_1_Summary$Treatment), FUN = mean) |>
  rename(Shannon_Diversity = x)

Quad_Shan

Quad_Shan_Bar <- ggplot(Quad_Shan) +  
  aes(x = Group.1, y = Shannon_Diversity, fill = Group.1) + 
  scale_fill_manual(values = c("darkblue", "limegreen")) +
  geom_col() +
  labs(x = "Treatment",
       y = "Shannon Diversity",
       title = "Shannon Diversity of Native vs. Non-Native Plots")
Quad_Shan_Bar
```

```{r}
Quad_Wide_1 <- Quad_Wide |>
  pivot_wider(names_from = Species_Code, values_from = Count, values_fill = 0)
Quad_Wide_1

Shan <- diversity(Quad_Wide_1[,5:ncol(Quad_Wide_1)], index = "shannon")
Quad_Wide_1_Summary <- Quad_Wide_1[1:3] |>
bind_cols(Shan)
Quad_Wide_1_Summary

Quad_Shan <- aggregate(x = Quad_Wide_1_Summary$...4, by = list(Quad_Wide_1_Summary$Treatment), FUN = mean) |>
  rename(Shannon_Diversity = x)

Quad_Shan

Quad_Shan_Bar <- ggplot(Quad_Shan) +  
  aes(x = Group.1, y = Shannon_Diversity, fill = Shannon_Diversity) + 
  geom_col()
Quad_Shan_Bar


Quad_Wide_2 <-Quad_Wide |>
  filter(Species_Code != "ACHTOM") |>
  filter(Species_Code != "CYNDAC") |>
  filter(Species_Code != "OXACOR") |>
  filter(Species_Code != "DAUCAR") |>
  filter(Species_Code != "EUPALB") |>
  filter(Species_Code != "ROSOFF") |>
  filter(Species_Code != "RHAIND") |>
  filter(Species_Code != "LAVGIN") |>
  filter(Species_Code != "PERATR") |>
  filter(Species_Code != "RUEBRI") |>
  filter(Species_Code != "CISPUR") |>
  filter(Species_Code != "FESMAI") |>
  filter(Species_Code != "PENSPAL")

  

, "CYNDAC", "DAUCAR", "EUPALB", "ROSOFF", "RHAIND", "LAVGIN", "PERATR", "RUEBRI", "CISPUR", "FESMAI", "PENSPAL"))




```
