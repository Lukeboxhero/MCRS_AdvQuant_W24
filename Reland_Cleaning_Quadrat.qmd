---
title: "Relandscaping Cleaning Template"
format: html
editor: visual
---

## Relandscaping Data Cleaning: FILL IN YOUR VARIABLE HERE

Winter 2024 - MCRS Advanced Quantitative Methods Class Project

Team #: 2

Team Members:

### Load Packages

```{r}
#install.packages(tidyverse)
library(tidyverse)
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)

```

### Import Data Files

```{r}
Quad_Winter_19 <- read_excel("Quad_Winter 2019 GH Relandscaping Quadrat Data.xlsx", 
             sheet = 1, 
             col_types = "text")
            # col_names = FALSE, 
             # col_names = TRUE,
             #col_types = TRUE, 
            #col_types = "text" 

```

```{r}
Quad_Spring_18 <- read_excel("Quad_GH Relandscaping Quadrat Data_Jun2018.xlsx",
                             col_types = "text")
```

```{r}
QuadFall_18<- read_excel("Quad_Fall 2018 GH Relandscaping Quadrat Data.xlsx",
                         col_types = "text")
```

### Create Primary

Reformat the data from each of your imported spreadsheets to have common columns and column formats so you can bind them into one object.

#### Data Frame #1: Fall 2018 data (example)

```{r}
Quad_Winter_19_Clean <- Quad_Winter_19 |>
  select(2:9) |>
  mutate(Turf = case_when(Block == "No TURF Control" ~ "NonTurf",
                    Block == "TURF Control" ~ "Turf",
         Quad == "3.0" ~ "NonTurf")) |>
  #mutate(Block = as.numeric(Block))|>
 # mutate(Quad = as.numeric(Quad)) |>
  mutate(Date="Winter 2019")
```

#### Data Frame #2: fill in and add as needed

```{r}
Quad_Spring_18_Clean <- Quad_Spring_18 |>
  select(2:9) |>
  mutate(Block = "") |>
  #mutate(Block = as.numeric(Block)) |>
  #mutate(Quad = as.numeric(Quad)) |>
  mutate(Date="Spring 2018")
```

```{r}
QuadFall_18_Clean <- QuadFall_18 |>
  select(2:9) |>
  mutate(Turf = case_when(Quad == "Non-Turf Control" ~ "NonTurf",
                    Quad == "Turf Control" ~ "Turf")) |>
  #mutate(Quad = as.numeric(Quad))|>
  mutate(Date="Fall 2018")
```

#### Complete Raw Data

Bind your cleaned data frames together into one object. Clean up any remaining column names or formats.

```{r}
Quad_Combined <- bind_rows(Quad_Winter_19_Clean, Quad_Spring_18_Clean, QuadFall_18_Clean)
```

### Cleaning

Go through your raw data frame column by column to find and correct issues.

#### Issue #1: Select columns

```{r}
Quad_Combined_Clean<-Quad_Combined %>% select(2, 3, 4, 5, 6, 9,10)
```

#### Issue #2: Rename columns

```{r}
colnames(Quad_Combined_Clean)
Quad_Combined_Clean<- Quad_Combined_Clean%>% rename(Species_Code=`Species Code`)
```

#### **Issue #3:** Change to integers

```{r}
Quad_Combined_Clean<-Quad_Combined_Clean %>% mutate(Block = as.integer(Block), Count = as.integer(Count), Quad = as.integer(Quad))
```

#### **Issue #4: Rename treatment values and unknown species**

```{r}
Quad_Combined_Clean[Quad_Combined_Clean=="N"] <- "Native"
Quad_Combined_Clean[Quad_Combined_Clean=="NN"] <- "NonNative"
Quad_Combined_Clean$Species_Code[Quad_Combined_Clean$Species_Code == "HEDHEL (eng ivy)"] <- "HEDHEL"
Quad_Combined_Clean$Species_Code[Quad_Combined_Clean$Species_Code == "UK(01)"] <- "UNK1"
Quad_Combined_Clean$Species_Code[Quad_Combined_Clean$Species_Code == "UK(02)"] <- "UNK2"
Quad_Combined_Clean$Species_Code[Quad_Combined_Clean$Species_Code == "UK(03)"] <- "UNK3"
Quad_Combined_Clean$Species_Code[Quad_Combined_Clean$Species_Code == "UK(04)"] <- "UNK4"

```

#### Issue #5: Remove duplicate rows

```{r}
Quad_Combined_Clean<-Quad_Combined_Clean[-c(1,85),]
```

#### Issue #6: Remove NA values

```{r}
Quad_Combined_Clean<- Quad_Combined_Clean %>% filter(Treatment == "Native" | Treatment== "NonNative" & Block >=1 & Quad >=1)
```

#### Issue #7 Remove Missing Counts

```{r}
Quad_Combined_Clean<- Quad_Combined_Clean[-c(67),]
```

#### Issue #8 Replace NA with Values in Block Column

```{r}
Quad_Combined_Clean<- Quad_Combined_Clean %>%
  mutate(Block = if_else(is.na (Block) & Quad == "3", 2, Block)) |> 
   mutate(Block = if_else(is.na (Block) & Quad == "4", 2, Block)) |>
   mutate(Block = if_else(is.na (Block) & Quad == "5", 3, Block)) |>
   mutate(Block = if_else(is.na (Block) & Quad == "6", 3, Block)) |>
   mutate(Block = if_else(is.na (Block) & Quad == "9", 1, Block)) |>
   mutate(Block = if_else(is.na (Block) & Quad == "10", 1, Block))
```

#### Issue# 9: Replace NA with Values in Quad

```{r}
Quad_Combined_Clean<- Quad_Combined_Clean[-c(75),]
```

#### Issue #10: Replace NA with Turf or NonTurf

```{r}
Quad_Combined_Clean<- Quad_Combined_Clean %>%
  mutate(Turf = if_else(is.na (Turf) & Block == "1","NonTurf" , Turf)) |>
  mutate(Turf = if_else(is.na (Turf) & Block == "3","Turf" , Turf)) |>
 mutate(Turf = if_else(is.na (Turf) & Block == "2","Turf" , Turf))
```

### Save your cleaned and complete Primary data frame to .csv and .Rdata and save the file as VARIABLE_Primary.csv or similar.

```{r}

```
